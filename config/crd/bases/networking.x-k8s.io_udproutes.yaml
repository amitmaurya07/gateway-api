
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: udproutes.networking.x-k8s.io
spec:
  group: networking.x-k8s.io
  names:
    kind: UDPRoute
    listKind: UDPRouteList
    plural: udproutes
    singular: udproute
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UDPRoute is the Schema for the udproutes API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UDPRouteSpec defines the desired state of UDPRoute.
            properties:
              rules:
                description: Rules are a list of UDP matchers and actions.
                items:
                  description: UDPRouteRule is the configuration for a given rule.
                  properties:
                    action:
                      description: Action defines what happens to the packet.
                      properties:
                        extensionRef:
                          description: "ExtensionRef is an optional, implementation-specific extension to the \"action\" behavior.  The resource may be \"configmaps\" (use the empty string for the group) or an implementation-defined resource (for example, resource \"myrouteactions\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"configmaps\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the UDPRoute will be true. \n Support: custom"
                          properties:
                            group:
                              default: core
                              description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a configmaps: \n fooRef:   resource: configmaps   name: myconfigmap \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                              type: string
                            name:
                              description: Name is the name of the referent.
                              type: string
                            resource:
                              default: configmaps
                              description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the configmaps resource. For example, use the following to specify a configmaps resource: \n fooRef:   name: myconfigmap \n Otherwise, if the configmaps resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                              type: string
                          required:
                          - name
                          type: object
                        forwardTo:
                          description: ForwardTo sends requests to the referenced object.  The resource may be "services" (omit or use the empty string for the group), or an implementation may support other resources (for example, resource "myroutetargets" in group "networking.acme.io"). Omitting or specifying the empty string for both the resource and group indicates that the resource is "services".  If the referent cannot be found, the "InvalidRoutes" status condition on any Gateway that includes the UDPRoute will be true.
                          properties:
                            filters:
                              description: "Filters defined at this-level should be executed if and only if the request is being forwarded to the target defined here. \n Conformance: For any implementation, filtering support, including core filters, is NOT guaranteed at this-level. Use Filters in HTTPRouteRule for portable filters across implementations. \n Support: custom"
                              items:
                                description: 'HTTPRouteFilter defines additional processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant as an extension point to express additional processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter. TODO(hbagdi): re-render CRDs once controller-tools supports union tags: - https://github.com/kubernetes-sigs/controller-tools/pull/298 - https://github.com/kubernetes-sigs/controller-tools/issues/461'
                                properties:
                                  extensionRef:
                                    description: ExtensionRef is an optional, implementation-specific extension to the "filter" behavior.  The resource may be "configmap" (use the empty string for the group) or an implementation-defined resource (for example, resource "myroutefilters" in group "networking.acme.io"). Omitting or specifying the empty string for both the resource and group indicates that the resource is "configmaps". ExtensionRef MUST NOT be used for core and extended filters.
                                    properties:
                                      group:
                                        default: core
                                        description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a configmaps: \n fooRef:   resource: configmaps   name: myconfigmap \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                        type: string
                                      name:
                                        description: Name is the name of the referent.
                                        type: string
                                      resource:
                                        default: configmaps
                                        description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the configmaps resource. For example, use the following to specify a configmaps resource: \n fooRef:   name: myconfigmap \n Otherwise, if the configmaps resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  requestHeader:
                                    description: HTTPRequestHeaderConfig defines configuration for the RequestHeader filter.
                                    properties:
                                      add:
                                        additionalProperties:
                                          type: string
                                        description: "Add adds the given header (name, value) to the request before the action. \n Input:   GET /foo HTTP/1.1 \n Config:   add: {\"my-header\": \"foo\"} \n Output:   GET /foo HTTP/1.1   my-header: foo \n Support: extended?"
                                        type: object
                                      remove:
                                        description: "Remove the given header(s) from the HTTP request before the action. The value of RemoveHeader is a list of HTTP header names. Note that the header names are case-insensitive [RFC-2616 4.2]. \n Input:   GET /foo HTTP/1.1   My-Header1: ABC   My-Header2: DEF   My-Header2: GHI \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   My-Header2: DEF \n Support: extended?"
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - add
                                    - remove
                                    type: object
                                  type:
                                    description: "Type identifies the filter to execute. Types are classified into three conformance-levels (similar to other locations in this API): - Core and extended: These filter types and their corresponding configuration   is defined in this package. All implementations must implement   the core filters. Implementers are encouraged to support extended filters.   Definitions for filter-specific configuration for these   filters is defined in this package. - Custom: These filters are defined and supported by specific vendors.   In the future, filters showing convergence in behavior across multiple   implementations will be considered for inclusion in extended or core   conformance rings. Filter-specific configuration for such filters   is specified using the ExtensionRef field. `Type` should be set to   \"ImplementationSpecific\" for custom filters. \n Implementers are encouraged to define custom implementation types to extend the core API with implementation-specific behavior."
                                    type: string
                                required:
                                - requestHeader
                                - type
                                type: object
                              type: array
                            targetPort:
                              description: "TargetPort specifies the destination port number to use for the TargetRef. If unspecified and TargetRef is a Service object consisting of a single port definition, that port will be used. If unspecified and TargetRef is a Service object consisting of multiple port definitions, an error is surfaced in status. \n Support: Core"
                              format: int32
                              type: integer
                            targetRef:
                              description: "TargetRef is an object reference to forward matched requests to. The resource may be \"services\" (omit or use the empty string for the group), or an implementation may support other resources (for example, resource \"myroutetargets\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"services\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the HTTPRoute will be true. \n Support: Core (Kubernetes Services) Support: Implementation-specific (Other resource types)"
                              properties:
                                group:
                                  default: core
                                  description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a service: \n fooRef:   resource: services   name: myservice \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                  type: string
                                name:
                                  description: Name is the name of the referent.
                                  type: string
                                resource:
                                  default: services
                                  description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the services resource. For example, use the following to specify a services resource: \n fooRef:   name: myservice \n Otherwise, if the services resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                  type: string
                              required:
                              - name
                              type: object
                            weight:
                              default: 1
                              description: "Weight specifies the proportion of traffic forwarded to a targetRef, computed as weight/(sum of all weights in targetRefs). Weight is not a percentage and the sum of weights does not need to equal 100. The following example (in yaml) sends 70% of traffic to service \"my-trafficsplit-sv1\" and 30% of the traffic to service \"my-trafficsplit-sv2\": \n   forwardTo:     - targetRef:         name: my-trafficsplit-sv1         weight: 70     - targetRef:         name: my-trafficsplit-sv2         weight: 30 \n If only one targetRef is specified, 100% of the traffic is forwarded to the targetRef. If unspecified, weight defaults to 1. \n Support: Core (httproute) Support: Extended (tcproute)"
                              format: int32
                              type: integer
                          required:
                          - targetRef
                          type: object
                      required:
                      - forwardTo
                      type: object
                    match:
                      description: Match defines which packets match this rule.
                      properties:
                        extensionRef:
                          description: "ExtensionRef is an optional, implementation-specific extension to the \"match\" behavior.  The resource may be \"configmap\" (use the empty string for the group) or an implementation-defined resource (for example, resource \"myroutematchers\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"configmaps\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the UDPRoute will be true. \n Support: custom"
                          properties:
                            group:
                              default: core
                              description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a configmaps: \n fooRef:   resource: configmaps   name: myconfigmap \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                              type: string
                            name:
                              description: Name is the name of the referent.
                              type: string
                            resource:
                              default: configmaps
                              description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the configmaps resource. For example, use the following to specify a configmaps resource: \n fooRef:   name: myconfigmap \n Otherwise, if the configmaps resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                  type: object
                type: array
            required:
            - rules
            type: object
          status:
            description: UDPRouteStatus defines the observed state of UDPRoute.
            properties:
              gatewayRefs:
                items:
                  description: GatewayObjectReference identifies a Gateway object.
                  properties:
                    name:
                      description: Name is the name of the referent.
                      type: string
                    namespace:
                      description: Namespace is the namespace of the referent.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - gatewayRefs
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
